<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import Namespace="System.Xml" #>
<#@ import Namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#
	var document = new XmlDocument();
	var file = Host.ResolvePath("..\\TestData\\ConversionResults.xml");
	document.Load(file);
	var colors = document.SelectNodes("ConversionResults/*");
#>
<#@ output extension=".cs" #>//Note: This is a generated file.
using ColorMine.ColorSpaces;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ColorMine.Test.ColorSpaces
{

<# foreach (XmlNode fromSpace in colors) { var fromName = fromSpace.Name; #>
	public class <#= fromName #>Test
    {
		[TestClass]
        public class To : ColorSpaceTest
        {
<# foreach(XmlNode test in fromSpace.ChildNodes) {
var colorName = test.Attributes["Name"].Value;
foreach (XmlNode toSpace in test.ChildNodes) { var toName = toSpace.Name; #>
			
			[TestMethod]
            public void <#= colorName #><#= fromName #>To<#= toName #>()
            {
				var knownColor = new <#= fromName #> {<# foreach (XmlNode attribute in test.Attributes) { if(attribute.Name != "Name") { #> <#= attribute.Name #> = <#= attribute.Value #>,<# } } #> };
				var expectedColor = new <#= toName #> {<# foreach (XmlNode attribute in toSpace.Attributes) { if(attribute.Name != "Name") { #> <#= attribute.Name #> = <#= attribute.Value #>,<# } } #> };

                ExpectedValuesForKnownColor(knownColor,expectedColor);
            }
<# } } #>

        }
	}
<# } #>
}